{"version":3,"file":"static/js/5428.042d5a32.chunk.js","mappings":"0JACA,EAAuB,yBAAvB,EAAuD,yB,6BCW1CA,EAA+B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3D,OACI,iBAAKC,UAAWC,EAAhB,WACI,kBAAMD,UAAWC,EAAjB,WACI,SAACC,EAAA,EAAD,CAAMC,KAAML,EAAUM,MAAM,SAASC,KAAM,MAC3C,SAACC,EAAA,EAAD,CAAMD,KAAK,QAAQD,MAAM,SAAzB,SACKP,QAGT,kBAAMG,UAAWC,EAAjB,WACI,SAACK,EAAA,EAAD,CAAMD,KAAK,QAAQD,MAAM,SAAzB,SACKL,KAEL,SAACG,EAAA,EAAD,CAAMC,KAAK,YAAYC,MAAM,SAASC,KAAM,a,iECxB5D,GAAgB,KAAO,yBAAyB,cAAc,gCAAgC,gBAAgB,kCAAkC,eAAe,iCAAiC,gBAAgB,kCAAkC,kBAAkB,qC,SCSvPE,EAA8B,SAAC,GAAkE,IAAhER,EAA+D,EAA/DA,SAA+D,IAArDS,MAAAA,OAAqD,MAA7C,SAA6C,MAAnCC,QAAAA,OAAmC,MAAzB,QAAyB,EAAhBT,EAAgB,EAAhBA,UACzF,OACI,gBAAKA,UAAW,CACZC,EAAAA,KACAA,EAAO,SAAD,OAAUO,IAChBP,EAAO,WAAD,OAAYQ,IAClBT,GACFU,KAAK,KALP,SAMKX,M,iECjBb,GAAgB,KAAO,yB,uCCiBVY,EAA6B,SAAC,GASpC,IAAD,IARFC,UAAAA,OAQE,MARU,SAQV,MAPFC,SAAAA,OAOE,MAPS,OAOT,MANFC,UAAAA,OAME,MANU,SAMV,MALFC,SAAAA,OAKE,MALS,GAKT,EAJFP,EAIE,EAJFA,MACAT,EAGE,EAHFA,SACAC,EAEE,EAFFA,UACAgB,EACE,EADFA,OAEA,OACI,UAACT,EAAA,EAAD,CAAYC,MAAOA,EAAOR,UAAWA,EAAWS,QAAQ,UAAxD,UAEQO,EAASA,KACL,SAACV,EAAA,EAAD,CAAMW,IAAI,IAAIb,MAAOQ,EAAWP,KAAMQ,EAAUb,UAAWC,EAAAA,KAA3D,SACKF,KAIb,SAACG,EAAA,EAAD,CACIC,KAAK,OACLC,MAAOU,EACPT,KAAMU,EACNf,UAAWC,EAAAA,Y,mECxC3B,GAAgB,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,cAAc,+BAA+B,MAAQ,0B,SCWzJiB,EAAYC,EAAAA,YACrB,WAAoFC,GAAM,IAArEC,EAAoE,EAApEA,MAAoE,IAA7DjB,MAAAA,OAA6D,MAArD,QAAqD,EAA5CL,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,UAAWsB,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAC/DC,EAAU,CACZvB,EAAAA,KACAA,EAAOG,GACPiB,EAAQpB,EAAAA,MAAe,GACvBD,GACFU,KAAK,KAEP,OACI,gBAAKU,IAAKA,EAAKpB,UAAWwB,EAASF,MAAOA,EAAOC,QAASA,EAA1D,SACKxB,Q,oGCtBjB,GAAgB,KAAO,oBAAoB,aAAa,0BAA0B,MAAQ,qBAAqB,IAAM,mBAAmB,OAAS,sBAAsB,YAAY,0B,kDCAnL,EAA4B,4BAA5B,EAAgE,wBAAhE,EAA+F,uBAA/F,EAA6H,uB,mBCmBhH0B,EAA4B,SAAC,GAUnC,IATHC,EASE,EATFA,KASE,IARFtB,MAAAA,OAQE,MARM,SAQN,EAPFkB,EAOE,EAPFA,MACAK,EAME,EANFA,OACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,YACAR,EACE,EADFA,QAEA,OACI,UAACL,EAAA,EAAD,CACII,MAAOA,EACPtB,UAAW,CAACuB,EAAUtB,EAAmB,IAAIS,KAAK,KAClDa,QAASA,EAHb,WAKI,UAAChB,EAAA,EAAD,CAAYC,MAAM,QAAQR,UAAWC,EAArC,WACI,SAACC,EAAA,EAAD,CACIG,KAAM,GACND,MAAOA,EACPD,KAAMuB,EACN1B,UAAWC,KAEf,SAACU,EAAA,EAAD,CAAWC,UAAWR,EAAOU,UAAWV,EAAOS,SAAS,OAAxD,SACKc,QAIT,SAACrB,EAAA,EAAD,CAAMF,MAAOA,EAAOa,IAAI,KAAKZ,KAAK,KAAKL,UAAWC,EAAlD,SACK2B,KAGL,SAACrB,EAAA,EAAD,CAAYP,UAAWC,EAAvB,SACK6B,EAAME,KAAI,SAACC,EAAMC,GACd,OACI,SAAC5B,EAAA,EAAD,CAAMF,MAAM,OAAZ,SACK6B,GADmBC,SAOpC,SAAC5B,EAAA,EAAD,CAAMW,IAAI,IAAIb,MAAOA,EAAOC,KAAK,KAAKL,UAAWC,EAAjD,SACK4B,IAGJE,EAAYC,KAAI,SAACG,EAAMC,GACpB,OACI,SAAC9B,EAAA,EAAD,CAAMW,IAAI,IAAajB,UAAWC,EAAlC,SACKkC,GADcC,UCnD1BC,EAA6B,CACtC,CACIC,KAAM,OACNX,OAAQ,uCACRC,MAAO,uCACPE,MAAO,CAAC,qEAAe,yDAAa,gHACpCD,MAAO,4gBACPE,YAAa,CACT,orBACA,gjBAGR,CACIO,KAAM,QACNX,OAAQ,yGACRC,MAAO,2BACPE,MAAO,CAAC,+DAAc,6CAAW,gHACjCD,MAAO,mXACPE,YAAa,CACT,2sCACA,0pBACA,umBAGR,CACIO,KAAM,SACNX,OAAQ,2EACRC,MAAO,uCACPE,MAAO,CAAC,qEAAe,6CAAW,0DAClCD,MAAO,+OACPE,YAAa,CACT,u3CACA,mpBACA,2XAGR,CACIO,KAAM,OACNX,OAAQ,2EACRC,MAAO,2BACPE,MAAO,CAAC,+DAAc,yDAAa,0DACnCD,MAAO,wTACPE,YAAa,CACT,+vDACA,mfACA,muBAKCQ,EAA6B,CACtC,CACIC,MAAO,SACPb,OAAQ,mDACRC,MAAO,2BACPE,MAAO,CAAC,6FAAmB,qEAAe,wCAC1CD,MAAO,+MACPE,YAAa,CACT,gnBACA,i1BAGR,CACIS,MAAO,OACPb,OAAQ,mDACRC,MAAO,iCACPE,MAAO,CAAC,+DAAc,qEAAe,kCACrCD,MAAO,2OACPE,YAAa,CACT,mqBACA,miBAGR,CACIS,MAAO,QACPb,OAAQ,yDACRC,MAAO,uCACPE,MAAO,CAAC,6FAAmB,yDAAa,kCACxCD,MAAO,6PACPE,YAAa,CACT,6fACA,uqBAGR,CACIS,MAAO,YACPb,OAAQ,6FACRC,MAAO,mDACPE,MAAO,CAAC,+DAAc,yDAAa,wCACnCD,MAAO,4WACPE,YAAa,CACT,swBACA,gtB,qDC5FNU,EAA4D,SAAC,GAG5D,IAFHH,EAEE,EAFFA,KACGI,GACD,YACMtC,GAAUuC,EAAAA,EAAAA,IAAaL,GAAvBlC,MAER,OACI,SAACqB,GAAD,QACIH,MAAOlB,EACPA,MAAM,OACNsB,MAAMkB,EAAAA,EAAAA,GAAYN,IACdI,KAKVG,EAA+D,SAAC,GAG/D,IAFHL,EAEE,EAFFA,MACGE,GACD,YACF,OACI,SAACjB,GAAD,QAAUrB,MAAM,SAASsB,MAAMkB,EAAAA,EAAAA,GAAYJ,IAAYE,KAIhD,SAASI,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACI,iBAAKhD,UAAWC,EAAAA,KAAhB,WACI,UAACiB,EAAA,EAAD,CAAWd,MAAM,QAAjB,WACI,SAACE,EAAA,EAAD,CAAMW,IAAI,KAAKZ,KAAK,KAAK4C,KAAK,aAAajD,UAAWC,EAAAA,MAAtD,mFAGA,SAACL,EAAA,EAAD,CAAYC,KAAK,wEAAiBC,SAAS,OAA3C,2CAEA,SAACQ,EAAA,EAAD,CAAMW,IAAI,IAAIjB,UAAWC,EAAAA,KAAzB,o3BAMA,mBAEA,SAACK,EAAA,EAAD,CAAMW,IAAI,IAAIZ,KAAK,KAAKD,MAAM,SAASJ,UAAWC,EAAAA,KAAlD,6CAIA,SAACK,EAAA,EAAD,CAAMW,IAAI,IAAIjB,UAAWC,EAAAA,KAAzB,i6BAOA,UAACM,EAAA,EAAD,YACI,SAACD,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,qEAGA,mBACA,SAACE,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,8EAKJ,UAACG,EAAA,EAAD,YACI,SAACD,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,mDAGA,mBACA,SAACE,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,kEAKJ,UAACG,EAAA,EAAD,YACI,SAACD,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,2HAGA,mBACA,SAACE,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,wEAKJ,mBAEA,SAACE,EAAA,EAAD,CAAMW,IAAI,IAAIZ,KAAK,KAAKD,MAAM,SAASJ,UAAWC,EAAAA,KAAlD,6CAGA,SAACK,EAAA,EAAD,CAAMW,IAAI,IAAIjB,UAAWC,EAAAA,KAAzB,4OAIA,UAACM,EAAA,EAAD,YACI,SAACD,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,6CAGA,mBACA,SAACE,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,0CAKJ,UAACG,EAAA,EAAD,YACI,SAACD,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,2EAGA,mBACA,SAACE,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,kEAKJ,UAACG,EAAA,EAAD,YACI,SAACD,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,qEAGA,mBACA,SAACE,EAAA,EAAD,CAAMD,KAAK,KAAKD,MAAM,OAAtB,yGAMR,SAACc,EAAA,EAAD,CAAWd,MAAM,QAAjB,UACI,SAACE,EAAA,EAAD,CAAMW,IAAI,KAAKZ,KAAK,KAApB,8CAKHgC,EAAWL,KAAI,SAACM,EAAMY,GACnB,OAAO,mBAACT,GAAD,kBAAcH,GAAd,IAAoBa,IAAKD,EAAI3B,SA3GzB6B,EA2GgDd,EAAKA,KA3GxB,kBAAMS,EAASM,EAAAA,GAAAA,WAAkBD,SAA/D,IAACA,MA8Gf,SAAClC,EAAA,EAAD,CAAWd,MAAM,QAAjB,UACI,SAACE,EAAA,EAAD,CAAMW,IAAI,KAAKZ,KAAK,KAApB,8CAKHkC,EAAWP,KAAI,SAACQ,EAAON,GACpB,OAAO,mBAACW,GAAD,kBAAeL,GAAf,IAAsBW,IAAKjB,EAAIX,SApH1B+B,EAoHkDd,EAAMA,MApHzB,kBAAMO,EAASM,EAAAA,GAAAA,YAAmBC,SAAlE,IAACA","sources":["webpack://humanology/./src/components/AuthorLine/AuthorLine.module.scss?8823","components/AuthorLine/AuthorLine.tsx","webpack://humanology/./src/components/TextInline/TextInline.module.scss?4061","components/TextInline/TextInline.tsx","webpack://humanology/./src/components/TitleInfo/TitleInfo.module.scss?5416","components/TitleInfo/TitleInfo.tsx","webpack://humanology/./src/components/WhiteCard/WhiteCard.module.scss?f517","components/WhiteCard/WhiteCard.tsx","webpack://humanology/./src/containers/Suits/Suits.module.scss?90d1","webpack://humanology/./src/components/SuitCard/SuitCard.module.scss?3a5f","components/SuitCard/SuitCard.tsx","containers/Suits/data.ts","containers/Suits/Suits.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthorLine_root__KscPk\",\"pair\":\"AuthorLine_pair__+aqp4\"};","import React from 'react';\r\nimport styles from './AuthorLine.module.scss';\r\nimport { Icon } from '../Icon';\r\nimport { Text } from '../Text';\r\nimport * as Icons from '../Icon/icons';\r\n\r\ninterface Props {\r\n\ttext?: string;\r\n    iconName: keyof typeof Icons;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport const AuthorLine : React.FC<Props> = ({ text, iconName, children }) => {\r\n    return (\r\n        <div className={styles.root}>\r\n            <span className={styles.pair}>\r\n                <Icon name={iconName} color=\"accent\" size={16}/>\r\n                <Text size=\"small\" color=\"accent\">\r\n                    {text}\r\n                </Text>\r\n            </span>\r\n            <span className={styles.pair}>\r\n                <Text size=\"small\" color=\"accent\">\r\n                    {children}\r\n                </Text>\r\n                <Icon name=\"UserCheck\" color=\"accent\" size={16}/>\r\n            </span>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TextInline_root__RAkEm\",\"align-start\":\"TextInline_align-start__e4AtX\",\"align-stretch\":\"TextInline_align-stretch__0eCGa\",\"align-center\":\"TextInline_align-center__4iy8V\",\"justify-start\":\"TextInline_justify-start__sd6s5\",\"justify-between\":\"TextInline_justify-between__-CLpo\"};","import React from 'react';\r\nimport styles from './TextInline.module.scss';\r\n\r\nexport interface Props {\r\n    className?: string;\r\n    children: React.ReactNode[];\r\n    align?: 'center' | 'start' | 'stretch';\r\n    justify?: 'start' | 'between';\r\n}\r\n\r\nexport const TextInline: React.FC<Props> = ({ children, align = 'center', justify = 'start', className }) => {\r\n    return (\r\n        <div className={[\r\n            styles.root,\r\n            styles[`align-${align}`],\r\n            styles[`justify-${justify}`],\r\n            className\r\n        ].join(' ')}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"TitleInfo_icon__qdCFM\"};","import React from 'react';\r\nimport styles from './TitleInfo.module.scss';\r\n\r\nimport { Text, Props as TextProps } from '../Text';\r\nimport { Icon, Props as IconProps } from '../Icon';\r\nimport { TextInline, Props as TextInlineProps } from '../TextInline';\r\n\r\ninterface Props {\r\n    textColor?: TextProps<'strong'>['color'];\r\n    textSize?: TextProps<'strong'>['size'];\r\n    iconColor?: IconProps['color'];\r\n    iconSize?: IconProps['size'];\r\n    align?: TextInlineProps['align'],\r\n    children?: React.ReactNode | React.ReactNode[];\r\n    className?: string;\r\n    render?: () => Props['children'];\r\n}\r\n\r\nexport const TitleInfo: React.FC<Props> = ({\r\n    textColor = 'accent',\r\n    textSize = 'base',\r\n    iconColor = 'accent',\r\n    iconSize = 24,\r\n    align,\r\n    children,\r\n    className,\r\n    render,\r\n}) => {\r\n    return (\r\n        <TextInline align={align} className={className} justify=\"between\">\r\n            {\r\n                render ? render() :\r\n                    <Text tag=\"p\" color={textColor} size={textSize} className={styles.text}>\r\n                        {children}\r\n                    </Text>\r\n            }\r\n\r\n            <Icon\r\n                name=\"Help\"\r\n                color={iconColor}\r\n                size={iconSize}\r\n                className={styles.icon}\r\n            />\r\n        </TextInline>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WhiteCard_root__4CB-F\",\"white\":\"WhiteCard_white__CsytW\",\"beige\":\"WhiteCard_beige__rBOqm\",\"beige-title\":\"WhiteCard_beige-title__VaXNR\",\"small\":\"WhiteCard_small__cJWRQ\"};","import React from 'react';\r\nimport styles from './WhiteCard.module.scss';\r\n\r\ninterface Props {\r\n    small?: boolean;\r\n    children?: React.ReactNode | React.ReactNode[];\r\n    className?: string;\r\n    color?: 'white' | 'beige' | 'beige-title' | 'beige-title-big';\r\n    style?: React.CSSProperties;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport const WhiteCard = React.forwardRef<HTMLDivElement, Props>(\r\n    function WhiteCard({ small, color = 'white', children, className, style, onClick }, ref) {\r\n        const classes = [\r\n            styles.root,\r\n            styles[color],\r\n            small ? styles.small : '',\r\n            className,\r\n        ].join(' ');\r\n\r\n        return (\r\n            <div ref={ref} className={classes} style={style} onClick={onClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n);","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Suits_root__2w8Lv\",\"text-right\":\"Suits_text-right__K2JOP\",\"title\":\"Suits_title__OWb5f\",\"mb8\":\"Suits_mb8__WNpNC\",\"grower\":\"Suits_grower__02qeT\",\"card-icon\":\"Suits_card-icon__Fkk2c\"};","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"SuitCard_clickable__fLcUi\",\"title\":\"SuitCard_title__jpjx+\",\"text\":\"SuitCard_text__T1pWM\",\"icon\":\"SuitCard_icon__wIjKA\"};","import React, { CSSProperties } from 'react';\r\nimport styles from './SuitCard.module.scss';\r\nimport { WhiteCard } from '../../components/WhiteCard';\r\nimport { TextInline } from '../../components/TextInline';\r\nimport { Text } from '../../components/Text';\r\nimport { Icon, Props as IconProps } from '../../components/Icon';\r\nimport { TitleInfo } from '../../components/TitleInfo';\r\n\r\nexport interface Props {\r\n    title: string;\r\n    types: string[];\r\n    intro: string;\r\n    description: string[];\r\n    icon: IconProps['name'];\r\n    color: 'role' | 'accent';\r\n    style?: CSSProperties;\r\n    status: string;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport const SuitCard: React.FC<Props> = ({\r\n    icon,\r\n    color = 'accent',\r\n    style,\r\n    status,\r\n    title,\r\n    intro,\r\n    types,\r\n    description,\r\n    onClick,\r\n}) => {\r\n    return (\r\n        <WhiteCard\r\n            style={style}\r\n            className={[onClick ? styles.clickable : ''].join(' ')}\r\n            onClick={onClick}\r\n        >\r\n            <TextInline align=\"start\" className={styles.text}>\r\n                <Icon\r\n                    size={64}\r\n                    color={color}\r\n                    name={icon}\r\n                    className={styles.icon}\r\n                />\r\n                <TitleInfo textColor={color} iconColor={color} textSize=\"base\">\r\n                    {status}\r\n                </TitleInfo>\r\n            </TextInline>\r\n\r\n            <Text color={color} tag=\"h3\" size=\"h3\" className={styles.title}>\r\n                {title}\r\n            </Text>\r\n\r\n            <TextInline className={styles.text}>\r\n                {types.map((type, $t) => {\r\n                    return (\r\n                        <Text color=\"grey\" key={$t}>\r\n                            {type}\r\n                        </Text>\r\n                    );\r\n                })}\r\n            </TextInline>\r\n\r\n            <Text tag=\"p\" color={color} size=\"h6\" className={styles.text}>\r\n                {intro}\r\n            </Text>\r\n\r\n            {description.map((desc, $d) => {\r\n                return (\r\n                    <Text tag=\"p\" key={$d} className={styles.text}>\r\n                        {desc}\r\n                    </Text>\r\n                );\r\n            })}\r\n        </WhiteCard>\r\n    );\r\n};\r\n","import { Socionics } from 'src/types';\r\n\r\nexport type DataCardItem = {\r\n    status: string;\r\n    types: string[];\r\n    title: string;\r\n    intro: string;\r\n    description: string[];\r\n};\r\n\r\nexport type DataRoleItem = {\r\n    role: Socionics.Role;\r\n} & DataCardItem;\r\n\r\nexport type DataSuitItem = {\r\n    tarot: Socionics.Tarot;\r\n} & DataCardItem;\r\n\r\nexport const DATA_ROLES: DataRoleItem[] = [\r\n    {\r\n        role: 'king',\r\n        status: 'Статус',\r\n        title: 'Короли',\r\n        types: ['Экстраверты', 'Сенсорики', 'Предусмотрительные'],\r\n        intro: 'Это лидеры своей масти, их жизнь проходит на виду и имеет социальную значимость, репутация заслужена.',\r\n        description: [\r\n            'В описаниях Королей всегда присутствуют понятия авторитета, руководства, покровительства, уверенности, мудрости, ответственности.',\r\n            'Они умеют добиться задуманного, решать трудные задачи, распорядиться властью, позаботиться об окружающих.',\r\n        ],\r\n    },\r\n    {\r\n        role: 'paige',\r\n        status: 'Самодостаточность',\r\n        title: 'Пажи',\r\n        types: ['Интроверты', 'Интуиты', 'Предусмотрительные'],\r\n        intro: 'Это персонажи, не обладающие силой и властью, подвижные, гибкие, быстрые.',\r\n        description: [\r\n            'В описании Пажей всегда присутствуют понятия новости, вести, хорошей ориентации в жизненных ситуациях, восприимчивости, податливости. Они олицетворяют то, что связано с молодостью: энтузиазм, неопытность, ранимость, привлекательность.',\r\n            'Эта группа реализует свои интересы в нетрадиционных либо обновляющихся областях деятельности с постоянным кругом контактов.',\r\n            'Им нравится заниматься тем, что значимо лично для них, их внутренний мир идей, возможность работать в присущем им ритме.',\r\n        ],\r\n    },\r\n    {\r\n        role: 'knight',\r\n        status: 'Уникальность',\r\n        title: 'Рыцари',\r\n        types: ['Экстраверты', 'Интуиты', 'Беспечные'],\r\n        intro: 'Эти персонажи, ищущие, увлеченные своей идеей.',\r\n        description: [\r\n            'В описаниях Рыцарей всегда присутствует мотив движения, перемен, собственных целей, личной свободы. Они каждый день должны доказывать себе и миру, что они Рыцари, поэтому они устраивают турниры и дуэли, стараются выделиться, ищут новых и новых испытаний своих достоинств.',\r\n            'Эта группа реализуется в нетрадиционных или постоянно обновляющихся сферах деятельности с расширяющимся кругом контактов.',\r\n            'Их увлекают сложные перспективные задачи с масштабными последствиями.',\r\n        ],\r\n    },\r\n    {\r\n        role: 'lady',\r\n        status: 'Уникальность',\r\n        title: 'Дамы',\r\n        types: ['Интроверты', 'Сенсорики', 'Беспечные'],\r\n        intro: 'Это персонажи, сосредоточенные на своих отношениях с миром.',\r\n        description: [\r\n            'В описаниях Дам всегда присутствуют понятия авторитета, практичности, понимания собственных целей и умения их добиваться, уравновешенности, способности оказать поддержку, силы. Отмечаются качества, обеспечивающие комфортное взаимодействие с другими: доброжелательность, понимание, спокойствие, надежность, щедрость, зрелый жизненный опыт.',\r\n            'Этой группе свойственна деятельность практического характера с постоянным кругом контактов.',\r\n            'Их интересует хорошее материальное обеспечение, комфортные условия жизни и работы, запасы, обеспечивающие богатство ощущений и информации.',\r\n        ],\r\n    },\r\n];\r\n\r\nexport const DATA_SUITS: DataSuitItem[] = [\r\n    {\r\n        tarot: 'swords',\r\n        status: 'Прогресс',\r\n        title: 'Мечи',\r\n        types: ['Конструктивисты', 'Иррационалы', 'Логики'],\r\n        intro: 'Олицетворяют в обществе власть и закон.',\r\n        description: [\r\n            'В их описании всегда присутствуют понятия силы, власти, воли, решительности, агрессии, справедливости, иерархии, порядка.',\r\n            'Им присуще ясное понимание своих интересов, умение добиться результата, способность отстоять свои интересы и завоевывать, расширять территорию своих интересов.',\r\n        ],\r\n    },\r\n    {\r\n        tarot: 'cups',\r\n        status: 'Утешение',\r\n        title: 'Кубки',\r\n        types: ['Эмотивисты', 'Иррационалы', 'Этики'],\r\n        intro: 'Олицетворяют чувственное начало в обществе',\r\n        description: [\r\n            'В их описании всегда присутствуют понятия чувств и отношений, обаяния, духовности, милосердия, служения идеалу, и заботы о ближнем. ',\r\n            'Их ценят за дружественный настрой, проявление симпатии, умение сопереживать и тонкую чувствительность.',\r\n        ],\r\n    },\r\n    {\r\n        tarot: 'wands',\r\n        status: 'Назидание',\r\n        title: 'Посохи',\r\n        types: ['Конструктивисты', 'Рационалы', 'Этики'],\r\n        intro: 'Олицетворяют идеологическое начало в обществе',\r\n        description: [\r\n            'В их описании присутствуют понятия морального авторитета, личной инициативы, трудолюбия, успеха.',\r\n            'Их ценят за умение добиться поставленных целей и за готовность предоставить помощь или хороший совет, при решении трудной задачи.',\r\n        ],\r\n    },\r\n    {\r\n        tarot: 'pentacles',\r\n        status: 'Фундаменталисты',\r\n        title: 'Пентакли',\r\n        types: ['Эмотивисты', 'Рационалы', 'Логики'],\r\n        intro: 'Олицетворяют в обществе предпринимательскую активность, богатство.',\r\n        description: [\r\n            'В их описании всегда содержатся понятия богатства, собственности, благополучия, престижа, коммерческого интереса, влияния, материальных ценностей.',\r\n            'Им присуще умение управлять материальными ресурсами, разумно обращаться с властью и деньгами, добиваться высокого социального статуса.',\r\n        ],\r\n    },\r\n];\r\n","import React from 'react';\r\nimport styles from './Suits.module.scss';\r\nimport { WhiteCard } from '../../components/WhiteCard';\r\nimport { Text } from '../../components/Text';\r\nimport { TextInline } from '../../components/TextInline';\r\nimport { getIconName } from '../../components/Icon';\r\nimport { Socionics } from '../../types';\r\nimport { useColorRole } from '../../hooks';\r\nimport { SuitCard, Props as SuitCardProps } from '../../components/SuitCard';\r\nimport { DATA_ROLES, DATA_SUITS } from './data';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ROUTES } from '../../constants/routes';\r\nimport { AuthorLine } from '../../components/AuthorLine';\r\n\r\ntype CardRoleProps<K extends string, T> = {\r\n    [key in K]: T;\r\n} & Omit<SuitCardProps, 'icon' | 'color' | 'style'>;\r\n\r\nconst CardRole: React.FC<CardRoleProps<'role', Socionics.Role>> = ({\r\n    role,\r\n    ...otherProps\r\n}) => {\r\n    const { color } = useColorRole(role);\r\n\r\n    return (\r\n        <SuitCard\r\n            style={color}\r\n            color=\"role\"\r\n            icon={getIconName(role)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n};\r\n\r\nconst CardTarot: React.FC<CardRoleProps<'tarot', Socionics.Tarot>> = ({\r\n    tarot,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <SuitCard color=\"accent\" icon={getIconName(tarot)} {...otherProps} />\r\n    );\r\n};\r\n\r\nexport default function Suits() {\r\n    const navigate = useNavigate();\r\n\r\n    const goToSuitsCard = (cardName: Socionics.Role) => () => navigate(ROUTES.SUITS_CARD(cardName));\r\n    const goToSuitsTarot = (tarotName: Socionics.Tarot) => () => navigate(ROUTES.SUITS_TAROT(tarotName));\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <WhiteCard color=\"white\">\r\n                <Text tag=\"h1\" size=\"h4\" font=\"additional\" className={styles.title}>\r\n                    Карты и масти\r\n                </Text>\r\n                <AuthorLine text=\"Читать 5 минут\" iconName=\"Time\">äлеша</AuthorLine>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    Авторы этой идеи, Ирина и Сергей Савченко обратили внимание\r\n                    на определенную близость описаний соционических типов и\r\n                    персонажей квадрата Придворных карт колоды Таро.\r\n                </Text>\r\n\r\n                <hr />\r\n\r\n                <Text tag=\"p\" size=\"h6\" color=\"accent\" className={styles.text}>\r\n                    Карты\r\n                </Text>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    Группы стимулов к деятельности. У каждой группы типов,\r\n                    составленной таким образом, свои движущие мотивы, которые\r\n                    кажутся достойными внимания, заставляют проявлять\r\n                    активность.\r\n                </Text>\r\n\r\n                <TextInline>\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Интроверт\r\n                    </Text>\r\n                    <hr />\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Экстраверт\r\n                    </Text>\r\n                </TextInline>\r\n\r\n                <TextInline>\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Интуит\r\n                    </Text>\r\n                    <hr />\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Сенсорик\r\n                    </Text>\r\n                </TextInline>\r\n\r\n                <TextInline>\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Предусмотрительный\r\n                    </Text>\r\n                    <hr />\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Беспечный\r\n                    </Text>\r\n                </TextInline>\r\n\r\n                <hr />\r\n\r\n                <Text tag=\"p\" size=\"h6\" color=\"accent\" className={styles.text}>\r\n                    Масти\r\n                </Text>\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    Группируются немного по другим признакам.\r\n                </Text>\r\n\r\n                <TextInline>\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Логик\r\n                    </Text>\r\n                    <hr />\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Этик\r\n                    </Text>\r\n                </TextInline>\r\n\r\n                <TextInline>\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Иррационал\r\n                    </Text>\r\n                    <hr />\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Рационал\r\n                    </Text>\r\n                </TextInline>\r\n\r\n                <TextInline>\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Эмотивист\r\n                    </Text>\r\n                    <hr />\r\n                    <Text size=\"h6\" color=\"grey\">\r\n                        Конструктивист\r\n                    </Text>\r\n                </TextInline>\r\n            </WhiteCard>\r\n\r\n            <WhiteCard color=\"beige\">\r\n                <Text tag=\"h3\" size=\"h3\">\r\n                    Карты\r\n                </Text>\r\n            </WhiteCard>\r\n\r\n            {DATA_ROLES.map((role, $i) => {\r\n                return <CardRole {...role} key={$i} onClick={goToSuitsCard(role.role)} />;\r\n            })}\r\n\r\n            <WhiteCard color=\"beige\">\r\n                <Text tag=\"h3\" size=\"h3\">\r\n                    Масти\r\n                </Text>\r\n            </WhiteCard>\r\n\r\n            {DATA_SUITS.map((tarot, $t) => {\r\n                return <CardTarot {...tarot} key={$t} onClick={goToSuitsTarot(tarot.tarot)} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["AuthorLine","text","iconName","children","className","styles","Icon","name","color","size","Text","TextInline","align","justify","join","TitleInfo","textColor","textSize","iconColor","iconSize","render","tag","WhiteCard","React","ref","small","style","onClick","classes","SuitCard","icon","status","title","intro","types","description","map","type","$t","desc","$d","DATA_ROLES","role","DATA_SUITS","tarot","CardRole","otherProps","useColorRole","getIconName","CardTarot","Suits","navigate","useNavigate","font","$i","key","cardName","ROUTES","tarotName"],"sourceRoot":""}