{"version":3,"file":"static/js/1669.69f71308.chunk.js","mappings":"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","sources":["webpack://humanology/./src/components/AuthorLine/AuthorLine.module.scss?8823","components/AuthorLine/AuthorLine.tsx","webpack://humanology/./src/components/TextInline/TextInline.module.scss?4061","components/TextInline/TextInline.tsx","webpack://humanology/./src/components/TitleInfo/TitleInfo.module.scss?5416","components/TitleInfo/TitleInfo.tsx","webpack://humanology/./src/components/WhiteCard/WhiteCard.module.scss?f517","components/WhiteCard/WhiteCard.tsx","constants/functions.ts","webpack://humanology/./src/containers/Functions/Functions.module.scss?95f1","webpack://humanology/./src/components/SimpleFunctionCard/SimpleFunctionCard.module.scss?4a08","components/SimpleFunctionCard/SimpleFunctionCard.tsx","containers/Functions/Functions.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthorLine_root__KscPk\",\"pair\":\"AuthorLine_pair__+aqp4\"};","import React from 'react';\r\nimport styles from './AuthorLine.module.scss';\r\nimport { Icon } from '../Icon';\r\nimport { Text } from '../Text';\r\nimport * as Icons from '../Icon/icons';\r\n\r\ninterface Props {\r\n\ttext?: string;\r\n    iconName: keyof typeof Icons;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport const AuthorLine : React.FC<Props> = ({ text, iconName, children }) => {\r\n    return (\r\n        <div className={styles.root}>\r\n            <span className={styles.pair}>\r\n                <Icon name={iconName} color=\"accent\" size={16}/>\r\n                <Text size=\"small\" color=\"accent\">\r\n                    {text}\r\n                </Text>\r\n            </span>\r\n            <span className={styles.pair}>\r\n                <Text size=\"small\" color=\"accent\">\r\n                    {children}\r\n                </Text>\r\n                <Icon name=\"UserCheck\" color=\"accent\" size={16}/>\r\n            </span>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TextInline_root__RAkEm\",\"align-start\":\"TextInline_align-start__e4AtX\",\"align-stretch\":\"TextInline_align-stretch__0eCGa\",\"align-center\":\"TextInline_align-center__4iy8V\",\"justify-start\":\"TextInline_justify-start__sd6s5\",\"justify-between\":\"TextInline_justify-between__-CLpo\"};","import React from 'react';\r\nimport styles from './TextInline.module.scss';\r\n\r\nexport interface Props {\r\n    className?: string;\r\n    children: React.ReactNode[];\r\n    align?: 'center' | 'start' | 'stretch';\r\n    justify?: 'start' | 'between';\r\n}\r\n\r\nexport const TextInline: React.FC<Props> = ({ children, align = 'center', justify = 'start', className }) => {\r\n    return (\r\n        <div className={[\r\n            styles.root,\r\n            styles[`align-${align}`],\r\n            styles[`justify-${justify}`],\r\n            className\r\n        ].join(' ')}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"TitleInfo_icon__qdCFM\"};","import React from 'react';\r\nimport styles from './TitleInfo.module.scss';\r\n\r\nimport { Text, Props as TextProps } from '../Text';\r\nimport { Icon, Props as IconProps } from '../Icon';\r\nimport { TextInline, Props as TextInlineProps } from '../TextInline';\r\n\r\ninterface Props {\r\n    textColor?: TextProps<'strong'>['color'];\r\n    textSize?: TextProps<'strong'>['size'];\r\n    iconColor?: IconProps['color'];\r\n    iconSize?: IconProps['size'];\r\n    align?: TextInlineProps['align'],\r\n    children?: React.ReactNode | React.ReactNode[];\r\n    className?: string;\r\n    render?: () => Props['children'];\r\n}\r\n\r\nexport const TitleInfo: React.FC<Props> = ({\r\n    textColor = 'accent',\r\n    textSize = 'base',\r\n    iconColor = 'accent',\r\n    iconSize = 24,\r\n    align,\r\n    children,\r\n    className,\r\n    render,\r\n}) => {\r\n    return (\r\n        <TextInline align={align} className={className} justify=\"between\">\r\n            {\r\n                render ? render() :\r\n                    <Text tag=\"p\" color={textColor} size={textSize} className={styles.text}>\r\n                        {children}\r\n                    </Text>\r\n            }\r\n\r\n            <Icon\r\n                name=\"Help\"\r\n                color={iconColor}\r\n                size={iconSize}\r\n                className={styles.icon}\r\n            />\r\n        </TextInline>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WhiteCard_root__4CB-F\",\"white\":\"WhiteCard_white__CsytW\",\"beige\":\"WhiteCard_beige__rBOqm\",\"beige-title\":\"WhiteCard_beige-title__VaXNR\",\"small\":\"WhiteCard_small__cJWRQ\"};","import React from 'react';\r\nimport styles from './WhiteCard.module.scss';\r\n\r\ninterface Props {\r\n    small?: boolean;\r\n    children?: React.ReactNode | React.ReactNode[];\r\n    className?: string;\r\n    color?: 'white' | 'beige' | 'beige-title' | 'beige-title-big';\r\n    style?: React.CSSProperties;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport const WhiteCard = React.forwardRef<HTMLDivElement, Props>(\r\n    function WhiteCard({ small, color = 'white', children, className, style, onClick }, ref) {\r\n        const classes = [\r\n            styles.root,\r\n            styles[color],\r\n            small ? styles.small : '',\r\n            className,\r\n        ].join(' ');\r\n\r\n        return (\r\n            <div ref={ref} className={classes} style={style} onClick={onClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n);","import { Socionics } from '../types';\r\n\r\nexport const FUNCTION: Record<Socionics.Function, string> = {\r\n    base: 'Базовая',\r\n    creative: 'Творческая',\r\n    role: 'Ролевая',\r\n    back: 'Фоновая',\r\n    limit: 'Защитная',\r\n    pain: 'Болевая',\r\n    activate: 'Активационная',\r\n    suggestive: 'Суггестивная',\r\n} as const;\r\n\r\nexport const FUNCTION_LABELS: Record<Socionics.Function, string> = {\r\n    base: 'Живу',\r\n    creative: 'Творю',\r\n    role: 'Боюсь',\r\n    back: 'Делаю',\r\n    limit: 'Бесит',\r\n    pain: 'Страдаю',\r\n    activate: 'Нравится',\r\n    suggestive: 'Хочу',\r\n} as const;","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Functions_root__pOs8C\",\"text-right\":\"Functions_text-right__6lD5Q\",\"title\":\"Functions_title__I4Nad\",\"mb8\":\"Functions_mb8__e5eFa\",\"grower\":\"Functions_grower__0Txsb\",\"functionDetailCard\":\"Functions_functionDetailCard__EMqhO\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SimpleFunctionCard_root__OaMXJ\",\"size-xl\":\"SimpleFunctionCard_size-xl__gjlcN\",\"size-m\":\"SimpleFunctionCard_size-m__B8Gu7\",\"size-l\":\"SimpleFunctionCard_size-l__h1Erh\",\"size-s\":\"SimpleFunctionCard_size-s__FyA70\",\"functionIcon\":\"SimpleFunctionCard_functionIcon__6STtn\",\"transparent\":\"SimpleFunctionCard_transparent__2xXtP\",\"outline\":\"SimpleFunctionCard_outline__J9CVX\",\"striped\":\"SimpleFunctionCard_striped__ZZMNH\",\"stripe\":\"SimpleFunctionCard_stripe__wApD+\"};","import React from 'react';\r\nimport styles from './SimpleFunctionCard.module.scss';\r\nimport { Socionics } from 'src/types';\r\nimport { getIconName, Icon } from '../Icon';\r\nimport { FUNCTION } from 'src/constants/functions';\r\nimport { Text } from '../Text';\r\n\r\nexport interface Props {\r\n    function: Socionics.Function;\r\n}\r\n\r\ninterface ICardSettings {\r\n    opacity: 1 | 0.75 | 0.5;\r\n    transparent: boolean;\r\n    outline: boolean;\r\n    striped: boolean;\r\n    size: 'xl' | 'l' | 'm' | 's';\r\n}\r\n\r\nconst SETTINGS: Record<Socionics.Function, ICardSettings> = {\r\n    base: {\r\n        opacity: 1,\r\n        transparent: false,\r\n        outline: false,\r\n        striped: false,\r\n        size: 'xl',\r\n    },\r\n\r\n    creative: {\r\n        opacity: 0.75,\r\n        transparent: false,\r\n        outline: false,\r\n        striped: false,\r\n        size: 'l',\r\n    },\r\n\r\n    pain: {\r\n        opacity: 1,\r\n        transparent: true,\r\n        outline: true,\r\n        striped: true,\r\n        size: 'm',\r\n    },\r\n\r\n    role: {\r\n        opacity: 1,\r\n        transparent: true,\r\n        outline: false,\r\n        striped: false,\r\n        size: 's',\r\n    },\r\n\r\n    suggestive: {\r\n        opacity: 1,\r\n        transparent: true,\r\n        outline: false,\r\n        striped: false,\r\n        size: 'xl',\r\n    },\r\n\r\n    activate: {\r\n        opacity: 1,\r\n        transparent: true,\r\n        outline: false,\r\n        striped: false,\r\n        size: 'l',\r\n    },\r\n\r\n    back: {\r\n        opacity: 0.5,\r\n        transparent: false,\r\n        outline: false,\r\n        striped: false,\r\n        size: 'm',\r\n    },\r\n\r\n    limit: {\r\n        opacity: 0.5,\r\n        transparent: false,\r\n        outline: false,\r\n        striped: false,\r\n        size: 's',\r\n    }\r\n};\r\n\r\nexport const SimpleFunctionCard: React.FC<Props> = (props) => {\r\n    const { outline, transparent, striped, opacity, size } = SETTINGS[props.function];\r\n    const rootClasses = [\r\n        styles.root,\r\n        styles[`size-${size}`],\r\n        outline && styles.outline,\r\n        transparent && styles.transparent,\r\n        striped && styles.striped,\r\n    ].join(' ');\r\n\r\n    const isElementColor = outline || transparent || striped;\r\n    const textColor = isElementColor ? 'element' : 'white';\r\n    const functionIcon = getIconName(`function-${props.function}`);\r\n    const functionLabel = FUNCTION[props.function];\r\n\r\n    return (\r\n        <div className={rootClasses} style={{ opacity: opacity || 1 }}>\r\n            {(striped || outline) && (\r\n                <div className={styles.stripe} />\r\n            )}\r\n\r\n            <Text color={textColor} className={styles.function} font=\"additional\">\r\n                {functionLabel}\r\n            </Text>\r\n\r\n            <Icon\r\n                name={functionIcon}\r\n                color={textColor}\r\n                size={24}\r\n                className={styles.functionIcon}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from './Functions.module.scss';\r\nimport { WhiteCard } from '../../components/WhiteCard';\r\nimport { Text } from '../../components/Text';\r\nimport { SimpleFunctionCard } from '../../components/SimpleFunctionCard';\r\nimport { Socionics } from 'src/types';\r\nimport { TextInline } from 'src/components/TextInline';\r\nimport { TitleInfo } from 'src/components/TitleInfo';\r\nimport { AuthorLine } from '../../components/AuthorLine';\r\n\r\ninterface IData {\r\n    function: Socionics.Function;\r\n    labels: Array<string>\r\n    intro: string;\r\n    text: Array<string>;\r\n}\r\n\r\nconst DATA: IData[] = [\r\n    {\r\n        function: 'base',\r\n        labels: ['Ментальная', 'Ценностная', 'Сильная'],\r\n        intro: 'Основа личности. Получается лучше всего. Является самой экспертной.',\r\n        text: [\r\n            'Определяет то, как человек видит мир. Взгляд на жизнь, главный приоритет, основной маячок у человека. '\r\n        ]\r\n    },\r\n    {\r\n        function: 'creative',\r\n        labels: ['Витальная', 'Ценностная', 'Сильная'],\r\n        intro: 'Инструмент достижение целей. Наиболее изобретательно, творчески подходит к решению задач.',\r\n        text: [\r\n            'У каждого творческая функция является самой красивой. Она гибкая, быстрая, умеет приспосабливаться под ситуацию и конкретный момент. Активизируется в сложных ситуациях —палочка-выручалочка для каждого человека.'\r\n        ]\r\n\r\n    },\r\n    {\r\n        function: 'pain',\r\n        labels: ['Витальная', 'Внеценностная', 'Слабая'],\r\n        intro: 'Самое уязвимое место. Вызывает дискомфорт. Легче всего обидеть человека, задев его именно по болевой.',\r\n        text: [\r\n            'Если по другим функциям человек хочет работать или работает автоматически, то болевую функцию лучше не трогать вообще.',\r\n            'Критика, возмущение, даже просто много информации, попадающей на болевую функцию, способны вывести человека  из состояния равновесия.',\r\n        ]\r\n    },\r\n    {\r\n        function: 'role',\r\n        labels: ['Ментальная', 'Внеценностная', 'Слабая'],\r\n        intro: 'Человек обычно старается показать себя компетентным, но разрешать сложные ситуации и долго работать в режиме этой функции человеку сложно.',\r\n        text: [\r\n            'Человек по ее области реализации для адаптации в непривычных для себя условиях играет некую роль, помогающую социализироваться. Личность развивает в себе качества, как бы соответствующие определенным нормам, предъявляемым обществом к индивидууму.'\r\n        ]\r\n    },\r\n    {\r\n        function: 'suggestive',\r\n        labels: ['Витальная', 'Ценностная', 'Слабая'],\r\n        intro: 'Самая слабая из всех функций.Нравится в других. Получая достаточно информации по суггестивной функции, человек становится более счастливым.',\r\n        text: [\r\n            'Не получая информации по суггестивной функции, человек теряет интерес к жизни. Ему крайне нужна эта ценная информация и, подсознательно настраиваясь на дуала (ваша суггестивная функция — базовая функция дуала), человек готов слушать информацию по ней постоянно.'\r\n        ]\r\n    },\r\n    {\r\n        function: 'activate',\r\n        labels: ['Ментальная', 'Ценностная', 'Слабая'],\r\n        intro: 'Идеальная  рабочая обстановка. Охотно принимается помощь. Ориентируется на ближайшее окружение, положительно реагирует на воздействие.',\r\n        text: [\r\n            'Учиться в области активационной функции несложно, при этом очень интересно. Результат не только приятен, но и повышает самооценку.',\r\n            'Информация по функции активации поднимает настроение человеку, побуждает к активным действиям.'\r\n        ]\r\n    },\r\n    {\r\n        function: 'back',\r\n        labels: ['Ментальная', 'Внеценностная', 'Сильная'],\r\n        intro: 'Все ясно, не хочется объяснять. Отслеживается неосознанно.',\r\n        text: [\r\n            'Одна из наименее осознаваемых. Постоянно и надежно выполняет свою внутреннюю функцию в психической структуре человека.',\r\n            '«Ведет» практически не требуя сознательного вмешательства, в автоматическом режиме. Человек настолько уверен в своих силах, что не страшиться сколь угодно трудной ситуации по аспектам функции.',\r\n            'Автоматически реагирует в тех случаях, когда раздумывать некогда.'\r\n        ]\r\n    },\r\n    {\r\n        function: 'limit',\r\n        labels: ['Витальная', 'Внеценностная', 'Сильная'],\r\n        intro: 'В процессе жизненного формирования выстраивает (больше в бессознательном) определенные жесткие правила, которым должно удовлетворять поведение людей из значимого окружения и свое собственно.',\r\n        text: [\r\n            'Информация, поступающая на функцию защиты, неприятна и тяжела. Человек не хочет проявлять функцию без надобности.',\r\n            'Работать по ограничительной функции человек не сможет — слишком это чужие и неважные для него детали, а любую задачу можно с легкостью решить с помощью связки базовой и творческой функций.'\r\n        ]\r\n    }\r\n];\r\n\r\nexport default function Functions() {\r\n    return (\r\n        <div className={styles.root}>\r\n            <WhiteCard color=\"white\">\r\n                <Text tag=\"h1\" size=\"h4\" font=\"additional\" className={styles.title}>Функции</Text>\r\n                <AuthorLine text='Читать 5 минут' iconName='Time'>Неизвестен</AuthorLine>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    Целостное психологическое образование, которое также содержит: некоторое целостное внутренние\r\n                    пространство, внутреннюю сферу, память, составные части.\r\n                </Text>\r\n\r\n                <Text tag=\"p\" size=\"h5\" color=\"accent\" className={styles.text}>\r\n                    Каждая функция работает\r\n                    с определенным аспектом жизни.\r\n                </Text>\r\n\r\n                <Text tag=\"p\" className={styles.text}>Каждая функция психики человека влияет\r\n                    на его поведение, обозначает определенные признаки характера и побуждает принимать соответствующее\r\n                    только ему решение.\r\n                </Text>\r\n                {\r\n                    DATA.map((item, $itemKey) => (\r\n                        <div className={styles.functionDetailCard} key={$itemKey}>\r\n                            <TitleInfo align=\"start\" render={() => (\r\n                                <SimpleFunctionCard function={item.function} />\r\n                            )} className={styles.title} />\r\n\r\n                            <TextInline className={styles.text}>\r\n                                {\r\n                                    item.labels.map((label, $labelKey) => (\r\n                                        <Text color=\"grey\" size=\"small\" key={$labelKey}>\r\n                                            {label}\r\n                                        </Text>\r\n                                    ))\r\n                                }\r\n                            </TextInline>\r\n\r\n                            <Text tag=\"p\" size=\"h6\" color=\"accent\" className={styles.text}>\r\n                                {item.intro}\r\n                            </Text>\r\n\r\n                            {\r\n                                item.text.map((text, $textKey) => (\r\n                                    <Text tag=\"p\" className={styles.text} key={$textKey}>\r\n                                        {text}\r\n                                    </Text>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </WhiteCard>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["AuthorLine","text","iconName","children","className","styles","Icon","name","color","size","Text","TextInline","align","justify","join","TitleInfo","textColor","textSize","iconColor","iconSize","render","tag","WhiteCard","React","ref","small","style","onClick","classes","FUNCTION","base","creative","role","back","limit","pain","activate","suggestive","FUNCTION_LABELS","SETTINGS","opacity","transparent","outline","striped","SimpleFunctionCard","props","function","rootClasses","functionIcon","getIconName","functionLabel","font","DATA","labels","intro","Functions","map","item","$itemKey","label","$labelKey","$textKey"],"sourceRoot":""}