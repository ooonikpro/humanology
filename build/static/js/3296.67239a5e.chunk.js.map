{"version":3,"file":"static/js/3296.67239a5e.chunk.js","mappings":"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","sources":["webpack://humanology/./src/components/AuthorLine/AuthorLine.module.scss?8823","components/AuthorLine/AuthorLine.tsx","webpack://humanology/./src/components/TextInline/TextInline.module.scss?4061","components/TextInline/TextInline.tsx","webpack://humanology/./src/components/WhiteCard/WhiteCard.module.scss?f517","components/WhiteCard/WhiteCard.tsx","constants/aspects.ts","webpack://humanology/./src/containers/Aspects/Aspects.module.scss?0249","containers/Aspects/Aspects.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthorLine_root__z7IJl\",\"pair\":\"AuthorLine_pair__GPadm\"};","import React from 'react';\nimport styles from './AuthorLine.module.scss';\nimport { Icon } from '../Icon';\nimport { Text } from '../Text';\nimport * as Icons from '../Icon/icons';\n\ninterface Props {\n\ttext?: string;\n    iconName: keyof typeof Icons;\n\tchildren: React.ReactNode;\n}\n\nexport const AuthorLine : React.FC<Props> = ({ text, iconName, children }) => {\n    return (\n        <div className={styles.root}>\n            <span className={styles.pair}>\n                <Icon name={iconName} color=\"accent\" size={16}/>\n                <Text size=\"small\" color=\"accent\">\n                    {text}\n                </Text>\n            </span>\n            <span className={styles.pair}>\n                <Text size=\"small\" color=\"accent\">\n                    {children}\n                </Text>\n                <Icon name=\"UserCheck\" color=\"accent\" size={16}/>\n            </span>\n        </div>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TextInline_root__H8EDD\",\"align-start\":\"TextInline_align-start__RxI-t\",\"align-stretch\":\"TextInline_align-stretch__88di1\",\"align-center\":\"TextInline_align-center__dVGDQ\",\"justify-start\":\"TextInline_justify-start__ofzIk\",\"justify-between\":\"TextInline_justify-between__pn2n1\"};","import React from 'react';\nimport styles from './TextInline.module.scss';\n\nexport interface Props {\n    className?: string;\n    children: React.ReactNode[];\n    align?: 'center' | 'start' | 'stretch';\n    justify?: 'start' | 'between';\n}\n\nexport const TextInline: React.FC<Props> = ({ children, align = 'center', justify = 'start', className }) => {\n    return (\n        <div className={[\n            styles.root,\n            styles[`align-${align}`],\n            styles[`justify-${justify}`],\n            className\n        ].join(' ')}>\n            {children}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WhiteCard_root__dHza+\",\"white\":\"WhiteCard_white__7Lr55\",\"beige\":\"WhiteCard_beige__XBO+P\",\"beige-title\":\"WhiteCard_beige-title__5zigU\",\"small\":\"WhiteCard_small__ayQ5T\"};","import React from 'react';\nimport styles from './WhiteCard.module.scss';\n\ninterface Props {\n    small?: boolean;\n    children?: React.ReactNode | React.ReactNode[];\n    className?: string;\n    color?: 'white' | 'beige' | 'beige-title' | 'beige-title-big';\n    style?: React.CSSProperties;\n    onClick?: () => void;\n}\n\nexport const WhiteCard = React.forwardRef<HTMLDivElement, Props>(\n    function WhiteCard({ small, color = 'white', children, className, style, onClick }, ref) {\n        const classes = [\n            styles.root,\n            styles[color],\n            small ? styles.small : '',\n            className,\n        ].join(' ');\n\n        return (\n            <div ref={ref} className={classes} style={style} onClick={onClick}>\n                {children}\n            </div>\n        );\n    }\n);","import { Socionics } from '../types';\n\nexport const ASPECTS: Record<Socionics.Aspect, string> = {\n    ideas: 'Идеи',\n    business: 'Дела',\n    will: 'Воля',\n    emotions: 'Эмоции',\n    time: 'Время',\n    logic: 'Разум',\n    comfort: 'Комфорт',\n    people: 'Люди',\n} as const;\n\nexport const ASPECTS_LABEL: Record<Socionics.Aspect, string> = {\n    ideas: 'Интуиция возможностей',\n    business: 'Деловая логика',\n    will: 'Волевая сенсорика',\n    emotions: 'Этика эмоций',\n    time: 'Интуиция времени',\n    logic: 'Структурная логика',\n    comfort: 'Сенсорика ощущений',\n    people: 'Этика отношений',\n} as const;\n\nexport const ASPECTS_GROUPS: Array<{ title: string; subtitle: string; aspects: Socionics.Aspect[] }> = [\n    {\n        title: 'Объекты',\n        subtitle: 'Логика',\n        aspects: ['business', 'logic']\n    },\n    {\n        title: 'Энергия',\n        subtitle: 'Этика',\n        aspects: ['emotions', 'people']\n    },\n    {\n        title: 'Пространство',\n        subtitle: 'Сенсорика',\n        aspects: ['will', 'comfort']\n    },\n    {\n        title: 'Время',\n        subtitle: 'Интуиция',\n        aspects: ['ideas', 'time']\n    }\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Aspects_root__CGfng\",\"text-right\":\"Aspects_text-right__qUyiQ\",\"title\":\"Aspects_title__+3nOv\",\"mb8\":\"Aspects_mb8__ZuasA\",\"grower\":\"Aspects_grower__BVnq9\",\"ul\":\"Aspects_ul__K6ng8\",\"card\":\"Aspects_card__WKa42\",\"mini-icon\":\"Aspects_mini-icon__3sm7s\"};","import React from 'react';\nimport styles from './Aspects.module.scss';\nimport { WhiteCard } from '../../components/WhiteCard';\nimport { Text } from '../../components/Text';\nimport { TextInline } from '../../components/TextInline';\nimport { getIconName, Icon } from '../../components/Icon';\nimport { Socionics } from '../../types';\nimport { ASPECTS, ASPECTS_GROUPS, ASPECTS_LABEL } from '../../constants/aspects';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthorLine } from '../../components/AuthorLine';\n\nconst AspectCard: React.FC<{ aspect: Socionics.Aspect; onClick: () => void; }> = ({ aspect, onClick }) => {\n    const aspectIconMini = getIconName(`aspect-${aspect}-mini`);\n    const aspectIcon = getIconName(`aspect-${aspect}`);\n    const aspectTitle = ASPECTS[aspect];\n    const aspectSubtitle = ASPECTS_LABEL[aspect];\n\n    return (\n        <div className={styles.card} onClick={onClick}>\n            <Icon name={aspectIconMini} size={24} className={styles['mini-icon']}/>\n            <Icon color=\"accent\" name={aspectIcon} size={96}/>\n            <Text tag=\"h6\" size=\"h6\" className={styles.mb8}>{aspectTitle}</Text>\n            <Text color=\"accent\">{aspectSubtitle}</Text>\n        </div>\n    );\n};\n\nexport default function Aspects() {\n    const goTo = useNavigate();\n\n    return (\n        <div className={styles.root}>\n            <WhiteCard color=\"white\">\n                <Text tag=\"h1\" size=\"h4\" font=\"additional\" className={styles.title}>\n                    Аспекты\n                </Text>\n                <AuthorLine text='Читать 3 минуты' iconName='Time'>äлеша</AuthorLine>\n\n                <Text tag=\"p\" color=\"accent\" className={styles.text}>\n                    Макроаспекты\n                </Text>\n\n                <Text tag=\"ul\" className={styles.list}>\n                    <Text tag=\"li\"><b>Объекты:</b> черная логика, она же – деловая, объектная, экстравертная и белая логика, структурная, субъектная, интровертная.</Text>\n                    <Text tag=\"li\"><b>Энергия:</b> черная этика, объектная, экстравертная, этика эмоций и белая этика, субъектная, интровертная, этика отношений.</Text>\n                    <Text tag=\"li\"><b>Пространство:</b> черная сенсорика, волевая, объектная, экстравертная и белая сенсорика, субъективная, интровертная, сенсорика ощущений.</Text>\n                    <Text tag=\"li\">\n                        <b>Время:</b> черная интуиция, объектная, экстравертная, интуиция возможностей и белая интуиция, субъектная, интровертная, интуиция времени.\n                    </Text>\n                </Text>\n\n                <hr/>\n\n                <Text tag=\"p\" className={styles.text}>Каждый макроаспект делится на 2 аспекта:</Text>\n\n                <TextInline align=\"start\">\n                    <div className={styles.grower}>\n                        <Icon name=\"Extravertniy\" size={48} className={styles.text}/>\n\n                        <Text tag=\"p\" className={styles.text}>\n                            <b>Экстравертный</b> <br/> «черный» <br/> объективный\n                        </Text>\n\n                        <Text tag=\"p\" size=\"small\" className={styles.text}>\n                            Сущность аспекта, <br/> его свойства\n                        </Text>\n                    </div>\n\n                    <div className={styles.grower}>\n                        <Icon name=\"Introvertniy\" size={48} className={styles.text}/>\n\n                        <Text tag=\"p\" className={styles.text}>\n                            <b>Интровертный</b> <br/> «белый» <br/> cубъективный\n                        </Text>\n\n                        <Text tag=\"p\" size=\"small\" className={styles.text}>\n                            Отношения сущностей аспекта, сопоставление\n                        </Text>\n                    </div>\n                </TextInline>\n\n                <hr/>\n\n                {\n                    ASPECTS_GROUPS.map((item, $a) => {\n                        return (\n                            <div key={$a}>\n                                <TextInline justify=\"between\" className={styles.text}>\n                                    <Text tag=\"h3\" size=\"h3\" color=\"accent\">{item.title}</Text>\n                                    <Text>{item.subtitle}</Text>\n                                </TextInline>\n\n                                <TextInline align=\"stretch\">\n                                    <AspectCard aspect={item.aspects[0]} onClick={() => goTo(item.aspects[0])}/>\n                                    <AspectCard aspect={item.aspects[1]} onClick={() => goTo(item.aspects[1])}/>\n                                </TextInline>\n\n                                <hr/>\n                            </div>\n                        );\n                    })\n                }\n            </WhiteCard>\n        </div>\n    );\n}\n"],"names":["AuthorLine","text","iconName","children","className","styles","Icon","name","color","size","Text","TextInline","align","justify","join","WhiteCard","React","ref","small","style","onClick","classes","ASPECTS","ideas","business","will","emotions","time","logic","comfort","people","ASPECTS_LABEL","ASPECTS_GROUPS","title","subtitle","aspects","AspectCard","aspect","aspectIconMini","getIconName","aspectIcon","aspectTitle","aspectSubtitle","tag","Aspects","goTo","useNavigate","font","item","$a"],"sourceRoot":""}