{"version":3,"file":"static/js/7087.171f32db.chunk.js","mappings":"0JACA,EAAuB,yBAAvB,EAAuD,yB,6BCW1CA,EAA+B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3D,OACI,iBAAKC,UAAWC,EAAhB,WACI,kBAAMD,UAAWC,EAAjB,WACI,SAACC,EAAA,EAAD,CAAMC,KAAML,EAAUM,MAAM,SAASC,KAAM,MAC3C,SAACC,EAAA,EAAD,CAAMD,KAAK,QAAQD,MAAM,SAAzB,SACKP,QAGT,kBAAMG,UAAWC,EAAjB,WACI,SAACK,EAAA,EAAD,CAAMD,KAAK,QAAQD,MAAM,SAAzB,SACKL,KAEL,SAACG,EAAA,EAAD,CAAMC,KAAK,YAAYC,MAAM,SAASC,KAAM,a,mECxB5D,GAAgB,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,cAAc,+BAA+B,MAAQ,0B,SCWzJE,EAAYC,EAAAA,YACrB,WAAoFC,GAAM,IAArEC,EAAoE,EAApEA,MAAoE,IAA7DN,MAAAA,OAA6D,MAArD,QAAqD,EAA5CL,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,UAAWW,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAC/DC,EAAU,CACZZ,EAAAA,KACAA,EAAOG,GACPM,EAAQT,EAAAA,MAAe,GACvBD,GACFc,KAAK,KAEP,OACI,gBAAKL,IAAKA,EAAKT,UAAWa,EAASF,MAAOA,EAAOC,QAASA,EAA1D,SACKb,Q,8ECtBjB,GAAgB,KAAO,4BAA4B,aAAa,kCAAkC,MAAQ,6BAA6B,IAAM,2BAA2B,OAAS,+B,uCCKlK,SAASgB,IACpB,OACI,gBAAKf,UAAWC,EAAAA,KAAhB,UACI,UAACM,EAAA,EAAD,CAAWH,MAAM,QAAjB,WACI,SAACE,EAAA,EAAD,CAAMU,IAAI,KAAKX,KAAK,KAAKY,KAAK,aAAajB,UAAWC,EAAAA,MAAtD,wIAEA,SAACL,EAAA,EAAD,CAAYC,KAAK,wEAAiBC,SAAS,OAA3C,2EAEA,SAACQ,EAAA,EAAD,CAAMU,IAAI,IAAIX,KAAK,KAAKD,MAAM,SAASJ,UAAWC,EAAAA,KAAlD,qoBAMA,SAACK,EAAA,EAAD,CAAMU,IAAI,IAAIhB,UAAWC,EAAAA,KAAzB,0oBAKA,SAACK,EAAA,EAAD,CAAMU,IAAI,IAAIhB,UAAWC,EAAAA,KAAzB,o+BAMA,SAACK,EAAA,EAAD,CAAMU,IAAI,IAAIhB,UAAWC,EAAAA,KAAzB,qtBAMA,SAACK,EAAA,EAAD,CAAMU,IAAI,IAAIhB,UAAWC,EAAAA,KAAzB","sources":["webpack://humanology/./src/components/AuthorLine/AuthorLine.module.scss?8823","components/AuthorLine/AuthorLine.tsx","webpack://humanology/./src/components/WhiteCard/WhiteCard.module.scss?f517","components/WhiteCard/WhiteCard.tsx","containers/Relationships/Relationships.module.scss","containers/Relationships/Relationships.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AuthorLine_root__KscPk\",\"pair\":\"AuthorLine_pair__+aqp4\"};","import React from 'react';\r\nimport styles from './AuthorLine.module.scss';\r\nimport { Icon } from '../Icon';\r\nimport { Text } from '../Text';\r\nimport * as Icons from '../Icon/icons';\r\n\r\ninterface Props {\r\n\ttext?: string;\r\n    iconName: keyof typeof Icons;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport const AuthorLine : React.FC<Props> = ({ text, iconName, children }) => {\r\n    return (\r\n        <div className={styles.root}>\r\n            <span className={styles.pair}>\r\n                <Icon name={iconName} color=\"accent\" size={16}/>\r\n                <Text size=\"small\" color=\"accent\">\r\n                    {text}\r\n                </Text>\r\n            </span>\r\n            <span className={styles.pair}>\r\n                <Text size=\"small\" color=\"accent\">\r\n                    {children}\r\n                </Text>\r\n                <Icon name=\"UserCheck\" color=\"accent\" size={16}/>\r\n            </span>\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WhiteCard_root__4CB-F\",\"white\":\"WhiteCard_white__CsytW\",\"beige\":\"WhiteCard_beige__rBOqm\",\"beige-title\":\"WhiteCard_beige-title__VaXNR\",\"small\":\"WhiteCard_small__cJWRQ\"};","import React from 'react';\r\nimport styles from './WhiteCard.module.scss';\r\n\r\ninterface Props {\r\n    small?: boolean;\r\n    children?: React.ReactNode | React.ReactNode[];\r\n    className?: string;\r\n    color?: 'white' | 'beige' | 'beige-title' | 'beige-title-big';\r\n    style?: React.CSSProperties;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport const WhiteCard = React.forwardRef<HTMLDivElement, Props>(\r\n    function WhiteCard({ small, color = 'white', children, className, style, onClick }, ref) {\r\n        const classes = [\r\n            styles.root,\r\n            styles[color],\r\n            small ? styles.small : '',\r\n            className,\r\n        ].join(' ');\r\n\r\n        return (\r\n            <div ref={ref} className={classes} style={style} onClick={onClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n);","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Relationships_root__WACCo\",\"text-right\":\"Relationships_text-right__6E6cm\",\"title\":\"Relationships_title__7nXb4\",\"mb8\":\"Relationships_mb8__fgGPk\",\"grower\":\"Relationships_grower__2rU3T\"};","import React from 'react';\r\nimport styles from './Relationships.module.scss';\r\nimport { WhiteCard } from '../../components/WhiteCard';\r\nimport { Text } from '../../components/Text';\r\nimport { AuthorLine } from '../../components/AuthorLine';\r\n\r\nexport default function Relationships() {\r\n    return (\r\n        <div className={styles.root}>\r\n            <WhiteCard color=\"white\">\r\n                <Text tag=\"h1\" size=\"h4\" font=\"additional\" className={styles.title}>Интертипные отношения</Text>\r\n\r\n                <AuthorLine text='Читать 5 минут' iconName='Time'>Неизвестен</AuthorLine>\r\n\r\n                <Text tag=\"p\" size=\"h6\" color=\"accent\" className={styles.text}>\r\n                    Одной из главных причин, почему\r\n                    люди начинают изучать соционику, является упрощение взаимодействия\r\n                    с людьми вокруг себя.\r\n                </Text>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    С какими-то из 16 типов отношения у вас будут лучше, с какими-то хуже, и это правило работает\r\n                    абсолютно со всеми типами в соционе.\r\n                </Text>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    К примеру, есть люди, с которыми вы находите общий язык сразу, а есть люди, которых\r\n                    вы не понимаете, и которые не понимают вас.\r\n                    Это абсолютно нормально – нельзя иметь идеальные отношения со всеми.\r\n                </Text>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    Еще в 1978 году Аушра Аугустинавичуте\r\n                    выделила, что в соционике есть благоприятные типы отношений, есть нейтральные,\r\n                    а есть неблагоприятные.\r\n                </Text>\r\n\r\n                <Text tag=\"p\" className={styles.text}>\r\n                    Количество недопонимания и ссор\r\n                    в неблагоприятных отношениях будет\r\n                    на порядок выше, чем в благоприятных.\r\n                </Text>\r\n            </WhiteCard>\r\n        </div>\r\n    );\r\n}"],"names":["AuthorLine","text","iconName","children","className","styles","Icon","name","color","size","Text","WhiteCard","React","ref","small","style","onClick","classes","join","Relationships","tag","font"],"sourceRoot":""}